
### Notmuch-based email configuration ###
# Source this instead of the regular muttrc to use tag-based email management

### offline email -------------------------
set folder = "~/Documents/mutt/sspaeti.com/"
alias me "Simon Späti" "simon@ssp.sh"
set mbox_type = Maildir
set ssl_starttls = yes
set ssl_force_tls = yes
# set bcc="sspaeti@hey.com"

# Neomutt will actively add CR or LF after the exact characters. As I'm doing them myself, I set it to 0.
# set wrap=0
set text_flowed

### Direct -------------------------------
source ~/.dotfiles/zsh/.secret.muttrc

set realname = "Simon Späti"
set from = "simon@ssp.sh"
# accounts in `~/msmtprc`
set sendmail = "msmtp -a simon@sspaeti.com"
# send each mail bcc to hey email in order to have the full picture there too
send-hook . "my_hdr Bcc: sspaeti@hey.com"

#Create Macros for Switching Accounts:
macro compose <F1> "<enter-command>set sendmail='msmtp -a simon@ssp.sh'<enter><enter-command>set from='simon@ssp.sh'<enter>"
macro compose <F2> "<enter-command>set sendmail='msmtp -a simon@sspaeti.com'<enter><enter-command>set from='simu@sspaeti.com'<enter>"
macro compose <F3> "<enter-command>set sendmail='msmtp -a simu@sspaeti.com'<enter><enter-command>set from='simon@ssp.sh'<enter>"

macro index <F1> ":set from='simon@ssp.sh'\\n:set sendmail='mssmtp -a simon@ssp.sh'\\n"
macro index <F2> ":set from='simon@sspaeti.com'\\n:set sendmail='msmtp -a simon@sspaeti.com'\\n"
macro index <F3> ":set from='simu@sspaeti.com'\\n:set sendmail='msmtp -a simu@sspaeti.com'\\n"

set spoolfile = "+INBOX"
set record = "+Sent"
set trash = "+Trash"
set postponed = "+Drafts"

# Ensure TLS is enforced
set ssl_starttls = yes
set ssl_force_tls = yes

### NOTMUCH INTEGRATION ###
set nm_default_url = "notmuch:///home/sspaeti/Documents/mutt/sspaeti.com"
set nm_config_file = "~/.config/mutt/notmuch/notmuch-config"
set virtual_spool_file = yes

# Virtual mailboxes using notmuch queries (tag-based)
virtual-mailboxes \
    "INBOX" "notmuch://?query=tag:inbox and tag:screened-in and not tag:archive" \
    "ToScreen" "notmuch://?query=tag:to-screen" \
    "ScreenedOut" "notmuch://?query=tag:screened-out" \
    "Waiting" "notmuch://?query=tag:waiting" \
    "Scheduled" "notmuch://?query=tag:scheduled" \
    "Someday" "notmuch://?query=tag:someday" \
    "Sent" "notmuch://?query=tag:sent" \
    "Trash" "notmuch://?query=tag:deleted" \
    "Drafts" "notmuch://?query=tag:draft" \
    "Junk" "notmuch://?query=tag:spam or tag:junk" \
    "Archive" "notmuch://?query=tag:archive" \
    "Feed" "notmuch://?query=tag:feed" \
    "PaperTrail" "notmuch://?query=tag:papertrail" \
    "Unread" "notmuch://?query=tag:unread" \
    "All Mail" "notmuch://?query=*"

# SCREENER - Notmuch version
# Tag management macros instead of moving files

# Screen In - add screened-in tag and move to inbox
macro index,pager I "<pipe-message>formail -zx From: | grep -Eo '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}' | xargs -I {} echo {} >> ~/.dotfiles/mutt/.lists/screened_in.txt<enter><modify-labels>+screened-in +inbox -to-screen -new<enter>" "Screen in this sender"

# Screen Out - add screened-out tag
macro index,pager O "<pipe-message>formail -zx From: | grep -Eo '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}' | xargs -I {} echo {} >> ~/.dotfiles/mutt/.lists/screened_out.txt<enter><modify-labels>+screened-out +spam -inbox -to-screen<enter>" "Screen out this sender"

# Add to Feed list
macro index,pager F "<pipe-message>formail -zx From: | grep -Eo '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}' | xargs -I {} echo {} >> ~/.dotfiles/mutt/.lists/feed.txt<enter><modify-labels>+feed -inbox -to-screen<enter>" "Add sender to Feed"

# Add to PaperTrail list
macro index,pager P "<pipe-message>formail -zx From: | grep -Eo '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}' | xargs -I {} echo {} >> ~/.dotfiles/mutt/.lists/papertrail.txt<enter><modify-labels>+papertrail -inbox -to-screen<enter>" "Add sender to PaperTrail"

# Sync and screen
macro index,pager S "<shell-escape>~/.config/mutt/notmuch/sync/notmuch_sync.sh<enter>" "Sync with notmuch"
macro index,pager A "<shell-escape>~/.config/mutt/notmuch/notmuch_screening.sh >> ~/.config/mutt/logs/notmuch_screening.log 2>&1<enter>" "Run notmuch screening"

# Where to put the stuff
set header_cache = "~/.cache/mutt/headers"
set message_cachedir = "~/.cache/mutt/bodies"
set certificate_file = "~/.cache/mutt/certificates"

set signature = "~/.config/mutt/signature"

# link to mailcap file
set mailcap_path = "~/.config/mutt/mailcap"
# open attachments with mailcap with <return>
bind attach <return> view-mailcap
# save attachments to a folder
macro attach s '<save-entry> <bol>~/Documents/attachments/<eol>' 'save attachment'
auto_view text/html		# automatically show html (mailcap uses lynx)

#urlscan: open urls
macro index,pager \cb "<pipe-message> urlscan<Enter>" "call urlscan to extract URLs out of a message"
macro attach,compose \cb "<pipe-entry> urlscan<Enter>" "call urlscan to extract URLs out of a message"

# query
set query_command="/opt/homebrew/bin/lbdbq '%s'"
bind editor <Tab> complete-query

source ~/.config/mutt/color.muttrc

bind index,pager i noop
bind index,pager g noop
bind index \Cf noop
bind index,pager M noop
bind index,pager C noop

# General rebindings
set editor="nvim -c 'setlocal filetype=markdown'"
# for proper quoting
set indent_string="> "

bind index gg first-entry
bind index j next-entry
bind index k previous-entry
bind attach <return> view-mailcap
bind attach l view-mailcap
bind editor <space> noop
bind index G last-entry
bind pager,attach h exit
bind pager j next-line
bind pager k previous-line
bind pager l view-attachments

#Vim navigation
bind index,pager d noop
bind index,pager,browser \Cd half-down
bind index,pager,browser \Cu half-up
bind index,pager d half-down
bind index,pager u half-up
bind index D delete-message

# Global search macro
macro index \Cf "<limit>~B " "search in all folders"

# Unbind ESC+q from sort
unbind index,pager \eq

bind index h noop
bind index l display-message
bind index,query <space> tag-entry
macro browser h '<change-dir><kill-line>..<enter>' "Go to parent folder"
bind index,pager H view-raw-message
bind browser l select-entry
bind browser gg top-page
bind browser G bottom-page
bind pager gg top
bind pager G bottom

# Remove selection
macro index U "<tag-pattern>.<enter>;t<enter>"

# Batch operations shortcuts
# '@' - Limit by sender pattern (type partial email/domain, 'l'+'all' to reset)
macro index,pager @ "<limit>~f " "limit to sender pattern"
# 'T' - Tag by pattern (then use ;D to delete, ;Ma to archive, etc.)

bind index,pager R group-reply
bind index \031 previous-undeleted	# Mouse wheel
bind index \005 next-undeleted		# Mouse wheel
bind pager \031 previous-line		# Mouse wheel
bind pager \005 next-line		# Mouse wheel
bind editor <Tab> complete-query

## Tag-based folder navigation (using notmuch virtual mailboxes)
macro index,pager gi "<change-vfolder>INBOX<enter>" "go to INBOX"
macro index,pager Mi "<modify-labels>+inbox +screened-in -to-screen -screened-out -feed -papertrail<enter>" "tag as inbox"

macro index,pager gd "<change-vfolder>Drafts<enter>" "go to drafts"
macro index,pager Md "<modify-labels>+draft<enter>" "tag as draft"

macro index,pager gj "<change-vfolder>Junk<enter>" "go to junk"
macro index,pager Mj "<modify-labels>+junk +spam -inbox<enter>" "tag as junk"

macro index,pager gt "<change-vfolder>Trash<enter>" "go to trash"
macro index,pager Mt "<modify-labels>+deleted -inbox<enter>" "tag as trash"

macro index,pager gs "<change-vfolder>Sent<enter>" "go to sent"

macro index,pager gm "<change-vfolder>Someday<enter>" "go to Someday"
macro index,pager Mm "<modify-labels>+someday -inbox<enter>" "tag as someday"

macro index,pager ga "<change-vfolder>Archive<enter>" "go to archive"
macro index,pager Ma "<modify-labels>+archive -inbox<enter>" "tag as archive"

macro index,pager gw "<change-vfolder>Waiting<enter>" "go to waiting"
macro index,pager Mw "<modify-labels>+waiting -inbox<enter>" "tag as waiting"

macro index,pager gk "<change-vfolder>ToScreen<enter>" "go to screener"

macro index,pager gf "<change-vfolder>Feed<enter>" "go to Feed"
macro index,pager Mf "<modify-labels>+feed -inbox<enter>" "tag as feed"

macro index,pager gp "<change-vfolder>PaperTrail<enter>" "go to PaperTrail"
macro index,pager Mp "<modify-labels>+papertrail -inbox<enter>" "tag as papertrail"

macro index,pager go "<change-vfolder>ScreenedOut<enter>" "go to screened out"
macro index,pager Mo "<modify-labels>+screened-out +spam -inbox<enter>" "tag as screened out"

macro index,pager gl "<show-log-messages><enter>" "go to log messages"

# Sidebar mappings
set sidebar_visible = yes
set sidebar_on_right = yes
set sidebar_width = 30
set sidebar_short_path = yes
set sidebar_next_new_wrap = yes
set mail_check_stats
set sidebar_format = "%B %* [%?N?%N / ?%S]"
bind index,pager \Ck sidebar-prev
bind index,pager \Cj sidebar-next
bind index,pager \Co sidebar-open
bind index,pager \Cp sidebar-prev-new
bind index,pager \Cn sidebar-next-new
bind index,pager B sidebar-toggle-visible

# general settings from seniormars
set pager_index_lines = 10
set pager_context = 3                # show 3 lines of context
set pager_stop                       # stop at end of message
set menu_scroll                      # scroll menu
set tilde                            # use ~ to pad mutt
set move=no                          # don't move messages when marking as read
set mail_check = 30                  # check for new mail every 30 seconds
set imap_keepalive = 900             # 15 minutes
set sleep_time = 0		     # don't sleep when idle
set wait_key = no		     # mutt won't ask "press key to continue"
set envelope_from                    # which from?
set edit_headers                     # show headers when composing
set fast_reply                       # skip to compose when replying
set askcc                            # ask for CC:
set fcc_attach                       # save attachments with the body
set forward_format = "Fwd: %s"       # format of subject when forwarding
set forward_decode                   # decode when forwarding
set forward_quote                    # include message in forwards
set mime_forward                     # forward attachments as part of body
set attribution = "On %d, %n wrote:" # format of quoting header
set reply_to                         # reply to Reply to: field
set reverse_name                     # reply as whomever it was to
set include                          # include message in replies
set text_flowed=yes                  # correct indentation for plain text
unset sig_dashes                     # no dashes before sig
unset markers

# Sort by newest conversation first.
set charset = "utf-8"
set uncollapse_jump
set sort_re
set sort = reverse-threads
set sort_aux = last-date-received
# How we reply and quote emails.
set reply_regexp = "^(([Rr][Ee]?(\\[[0-9]+\\])?: *)?(\\[[^]]+\\] *)?)*"
set quote_regexp = "^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"
set send_charset = "utf-8:iso-8859-1:us-ascii" # send in utf-8

#Convert to HTML when hitting `m` for composing email
macro compose m \
"<enter-command>set pipe_decode<enter>\
<pipe-message>pandoc -f gfm -t plain -o /tmp/msg.txt<enter>\
<pipe-message>pandoc -s -f gfm --self-contained -o /tmp/msg.html --resource-path ~/.config/mutt/templates/ --template email.html<enter>\
<enter-command>unset pipe_decode<enter>\
<attach-file>/tmp/msg.txt<enter>\
<attach-file>/tmp/msg.html<enter>\
<tag-entry><previous-entry><tag-entry><group-alternatives>" \
"Convert markdown to HTML5 and plaintext alternative content types"
